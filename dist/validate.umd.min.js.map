{"version":3,"file":"validate.umd.min.js","sources":["../node_modules/zod/lib/index.mjs","../src/schemas.ts","../src/validate.ts"],"sourcesContent":["var util;\n(function (util) {\n    util.assertEqual = (val) => val;\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nconst ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n\nconst ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nclass ZodError extends Error {\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    get errors() {\n        return this.issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be greater than ${issue.inclusive ? `or equal to ` : ``}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be greater than ${issue.inclusive ? `or equal to ` : ``}${new Date(issue.minimum)}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be less than ${issue.inclusive ? `or equal to ` : ``}${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be smaller than ${issue.inclusive ? `or equal to ` : ``}${new Date(issue.maximum)}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\n\nlet overrideErrorMap = errorMap;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\n\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: issueData.message || errorMessage,\n    };\n};\nconst EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap,\n            ctx.schemaErrorMap,\n            getErrorMap(),\n            errorMap,\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            syncPairs.push({\n                key: await pair.key,\n                value: await pair.value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (typeof value.value !== \"undefined\" || pair.alwaysSet) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nconst INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nconst OK = (value) => ({ status: \"valid\", value });\nconst isAborted = (x) => x.status === \"aborted\";\nconst isDirty = (x) => x.status === \"dirty\";\nconst isValid = (x) => x.status === \"valid\";\nconst isAsync = (x) => typeof Promise !== undefined && x instanceof Promise;\n\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil || (errorUtil = {}));\n\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        return this._path.concat(this._key);\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        const error = new ZodError(ctx.common.issues);\n        return { success: false, error };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        if (typeof ctx.data === \"undefined\") {\n            return { message: required_error !== null && required_error !== void 0 ? required_error : ctx.defaultError };\n        }\n        return { message: invalid_type_error !== null && invalid_type_error !== void 0 ? invalid_type_error : ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this.superRefine = this._refinement;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.default = this.default.bind(this);\n        this.describe = this.describe.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n    }\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: [], parent: ctx });\n        const result = await (isAsync(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    optional() {\n        return ZodOptional.create(this);\n    }\n    nullable() {\n        return ZodNullable.create(this);\n    }\n    nullish() {\n        return this.optional().nullable();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this);\n    }\n    or(option) {\n        return ZodUnion.create([this, option]);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(undefined),\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst uuidRegex = /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n// eslint-disable-next-line\nconst emailRegex = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\nclass ZodString extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._regex = (regex, validation, message) => this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n        /**\n         * @deprecated Use z.string().min(1) instead.\n         * @see {@link ZodString.min}\n         */\n        this.nonempty = (message) => this.min(1, errorUtil.errToObj(message));\n        this.trim = () => new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            }\n            //\n            );\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this.min(len, message).max(len, message);\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\");\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.bigint,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBigInt.create = (params) => {\n    return new ZodBigInt({\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all(ctx.data.map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = ctx.data.map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return this.min(len, message).max(len, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////\n/////////////////////////////////////////\n//////////                     //////////\n//////////      ZodObject      //////////\n//////////                     //////////\n/////////////////////////////////////////\n/////////////////////////////////////////\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second,\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nconst AugmentFactory = (def) => (augmentation) => {\n    return new ZodObject({\n        ...def,\n        shape: () => ({\n            ...def.shape(),\n            ...augmentation,\n        }),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return ZodArray.create(deepPartialify(schema.element));\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        this.augment = AugmentFactory(this._def);\n        this.extend = AugmentFactory(this._def);\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever &&\n            this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") ;\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    syncPairs.push({\n                        key,\n                        value: await pair.value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        // const mergedShape = objectUtil.mergeShapes(\n        //   this._def.shape(),\n        //   merging._def.shape()\n        // );\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util.objectKeys(mask).map((key) => {\n            // only add to shape if key corresponds to an element of the current shape\n            if (this.shape[key])\n                shape[key] = this.shape[key];\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util.objectKeys(this.shape).map((key) => {\n            if (util.objectKeys(mask).indexOf(key) === -1) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        if (mask) {\n            util.objectKeys(this.shape).map((key) => {\n                if (util.objectKeys(mask).indexOf(key) === -1) {\n                    newShape[key] = this.shape[key];\n                }\n                else {\n                    newShape[key] = this.shape[key].optional();\n                }\n            });\n            return new ZodObject({\n                ...this._def,\n                shape: () => newShape,\n            });\n        }\n        else {\n            for (const key in this.shape) {\n                const fieldSchema = this.shape[key];\n                newShape[key] = fieldSchema.optional();\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required() {\n        const newShape = {};\n        for (const key in this.shape) {\n            const fieldSchema = this.shape[key];\n            let newField = fieldSchema;\n            while (newField instanceof ZodOptional) {\n                newField = newField._def.innerType;\n            }\n            newShape[key] = newField;\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.options.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: this.validDiscriminatorValues,\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get validDiscriminatorValues() {\n        return Array.from(this.options.keys());\n    }\n    get options() {\n        return this._def.options;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, types, params) {\n        // Get all the valid discriminator values\n        const options = new Map();\n        try {\n            types.forEach((type) => {\n                const discriminatorValue = type.shape[discriminator].value;\n                options.set(discriminatorValue, type);\n            });\n        }\n        catch (e) {\n            throw new Error(\"The discriminator value could not be extracted from all the provided schemas\");\n        }\n        // Assert that all the discriminator values are unique\n        if (options.size !== types.length) {\n            throw new Error(\"Some of the discriminator values are not unique\");\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date &&\n        bType === ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = ctx.data\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nclass ZodMap extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            return OK(async (...args) => {\n                const error = new ZodError([]);\n                const parsedArgs = await this._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await fn(...parsedArgs);\n                const parsedReturns = await this._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            return OK((...args) => {\n                const parsedArgs = this._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = fn(...parsedArgs.data);\n                const parsedReturns = this._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args\n                ? args\n                : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (this._def.values.indexOf(input.data) === -1) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n}\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string &&\n            ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (nativeEnumValues.indexOf(input.data) === -1) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise &&\n            ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then((processed) => {\n                    return this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                });\n            }\n            else {\n                return this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc\n            // effect: RefinementEffect<any>\n            ) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                // if (base.status === \"aborted\") return INVALID;\n                // if (base.status === \"dirty\") {\n                //   return { status: \"dirty\", value: base.value };\n                // }\n                if (!isValid(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!isValid(base))\n                        return base;\n                    // if (base.status === \"aborted\") return INVALID;\n                    // if (base.status === \"dirty\") {\n                    //   return { status: \"dirty\", value: base.value };\n                    // }\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nconst BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nconst custom = (check, params = {}, fatal) => {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            if (!check(data)) {\n                const p = typeof params === \"function\" ? params(data) : params;\n                const p2 = typeof p === \"string\" ? { message: p } : p;\n                ctx.addIssue({ code: \"custom\", ...p2, fatal });\n            }\n        });\n    return ZodAny.create();\n};\nconst late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\n// new approach that works for abstract classes\n// but required TS 4.4+\n// abstract class Class {\n//   constructor(..._: any[]) {}\n// }\n// const instanceOfType = <T extends typeof Class>(\nconst instanceOfType = (cls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params, true);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nconst NEVER = INVALID;\n\nvar mod = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    getParsedType: getParsedType,\n    ZodParsedType: ZodParsedType,\n    defaultErrorMap: errorMap,\n    setErrorMap: setErrorMap,\n    getErrorMap: getErrorMap,\n    makeIssue: makeIssue,\n    EMPTY_PATH: EMPTY_PATH,\n    addIssueToContext: addIssueToContext,\n    ParseStatus: ParseStatus,\n    INVALID: INVALID,\n    DIRTY: DIRTY,\n    OK: OK,\n    isAborted: isAborted,\n    isDirty: isDirty,\n    isValid: isValid,\n    isAsync: isAsync,\n    ZodType: ZodType,\n    ZodString: ZodString,\n    ZodNumber: ZodNumber,\n    ZodBigInt: ZodBigInt,\n    ZodBoolean: ZodBoolean,\n    ZodDate: ZodDate,\n    ZodUndefined: ZodUndefined,\n    ZodNull: ZodNull,\n    ZodAny: ZodAny,\n    ZodUnknown: ZodUnknown,\n    ZodNever: ZodNever,\n    ZodVoid: ZodVoid,\n    ZodArray: ZodArray,\n    get objectUtil () { return objectUtil; },\n    ZodObject: ZodObject,\n    ZodUnion: ZodUnion,\n    ZodDiscriminatedUnion: ZodDiscriminatedUnion,\n    ZodIntersection: ZodIntersection,\n    ZodTuple: ZodTuple,\n    ZodRecord: ZodRecord,\n    ZodMap: ZodMap,\n    ZodSet: ZodSet,\n    ZodFunction: ZodFunction,\n    ZodLazy: ZodLazy,\n    ZodLiteral: ZodLiteral,\n    ZodEnum: ZodEnum,\n    ZodNativeEnum: ZodNativeEnum,\n    ZodPromise: ZodPromise,\n    ZodEffects: ZodEffects,\n    ZodTransformer: ZodEffects,\n    ZodOptional: ZodOptional,\n    ZodNullable: ZodNullable,\n    ZodDefault: ZodDefault,\n    ZodNaN: ZodNaN,\n    BRAND: BRAND,\n    ZodBranded: ZodBranded,\n    custom: custom,\n    Schema: ZodType,\n    ZodSchema: ZodType,\n    late: late,\n    get ZodFirstPartyTypeKind () { return ZodFirstPartyTypeKind; },\n    any: anyType,\n    array: arrayType,\n    bigint: bigIntType,\n    boolean: booleanType,\n    date: dateType,\n    discriminatedUnion: discriminatedUnionType,\n    effect: effectsType,\n    'enum': enumType,\n    'function': functionType,\n    'instanceof': instanceOfType,\n    intersection: intersectionType,\n    lazy: lazyType,\n    literal: literalType,\n    map: mapType,\n    nan: nanType,\n    nativeEnum: nativeEnumType,\n    never: neverType,\n    'null': nullType,\n    nullable: nullableType,\n    number: numberType,\n    object: objectType,\n    oboolean: oboolean,\n    onumber: onumber,\n    optional: optionalType,\n    ostring: ostring,\n    preprocess: preprocessType,\n    promise: promiseType,\n    record: recordType,\n    set: setType,\n    strictObject: strictObjectType,\n    string: stringType,\n    transformer: effectsType,\n    tuple: tupleType,\n    'undefined': undefinedType,\n    union: unionType,\n    unknown: unknownType,\n    'void': voidType,\n    NEVER: NEVER,\n    ZodIssueCode: ZodIssueCode,\n    quotelessJson: quotelessJson,\n    ZodError: ZodError\n});\n\nexport { BRAND, DIRTY, EMPTY_PATH, INVALID, NEVER, OK, ParseStatus, ZodType as Schema, ZodAny, ZodArray, ZodBigInt, ZodBoolean, ZodBranded, ZodDate, ZodDefault, ZodDiscriminatedUnion, ZodEffects, ZodEnum, ZodError, ZodFirstPartyTypeKind, ZodFunction, ZodIntersection, ZodIssueCode, ZodLazy, ZodLiteral, ZodMap, ZodNaN, ZodNativeEnum, ZodNever, ZodNull, ZodNullable, ZodNumber, ZodObject, ZodOptional, ZodParsedType, ZodPromise, ZodRecord, ZodType as ZodSchema, ZodSet, ZodString, ZodEffects as ZodTransformer, ZodTuple, ZodType, ZodUndefined, ZodUnion, ZodUnknown, ZodVoid, addIssueToContext, anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, custom, dateType as date, mod as default, errorMap as defaultErrorMap, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, getErrorMap, getParsedType, instanceOfType as instanceof, intersectionType as intersection, isAborted, isAsync, isDirty, isValid, late, lazyType as lazy, literalType as literal, makeIssue, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, objectUtil, oboolean, onumber, optionalType as optional, ostring, preprocessType as preprocess, promiseType as promise, quotelessJson, recordType as record, setType as set, setErrorMap, strictObjectType as strictObject, stringType as string, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, voidType as void, mod as z };\n","import { z } from \"zod\"\n\nconst DESCRIPTION = {\n  PROVIDER:\n    \"This can be either a wallet or an identity provider. The user will only be able to connect with this provider on Quark's Checkout page\",\n  INTEGRATOR:\n    \"The Quark Address of the integrator. This address will receive the payment upon a successful checkout\",\n  NOTIFY: {\n    PRINCIPAL_ID:\n      \"The Principal ID of the canister that receives the callback from Quark to notify the payment result\",\n    METHOD:\n      \"The name of the canister method that is called from Quark to notify the payment result\",\n  },\n  BAKSET: {\n    NAME: \"The name of the basket item.\",\n    DESCRIPTION: \"Optional description of the basket item.\",\n  },\n}\n\nconst II = z.literal(\"II\", { description: \"Internet Identity\" })\nconst NFID = z.literal(\"NFID\", { description: \"Non-Fungible Identity\" })\nconst PLUG = z.literal(\"PLUG\", { description: \"Plug wallet\" })\nconst PROVIDERS = [II, NFID, PLUG]\n\nconst printProviders = () => PROVIDERS.map(p => p.value).join(\", \")\nconst Provider = z.union([II, NFID, PLUG], {\n  description: DESCRIPTION.PROVIDER,\n  invalid_type_error: \"Invalid provider\",\n  required_error: `Config.provider is required. Expected Provider as String. Choose between: ${printProviders()}`,\n})\n\nconst Integrator = z\n  .string({\n    description: DESCRIPTION.INTEGRATOR,\n    invalid_type_error: \"Invalid integrator. Expected Principal ID as String\",\n    required_error: \"Config.integrator is required\",\n  })\n  .uuid({ message: \"Invalid Principal ID\" })\n\nconst Domain = z\n  .string({\n    description: \"The domain of the Quark website\",\n    required_error: \"Config.domain is required\",\n  })\n  .url({ message: \"Invalid url\" })\n  .startsWith(\"https://\", { message: \"Must provide secure URL\" })\n  .endsWith(\".ic0.app\", { message: \"Only .ic0.app domains allowed\" })\n\n// .args() is `MessageEvent.data`\n// See: https://developer.mozilla.org/en-US/docs/Web/API/MessageEvent/data\nconst Callback = z.function().args(z.any()).returns(z.any())\n\n/**\n * Notify\n *\n * Used to produce a Candid func that is called when the checkout\n * has been confirmed on the Quark website. From there on out it is\n * up to the integrator to process all the bought items by the end-user.\n *\n * More info:\n * https://smartcontracts.org/docs/candid-guide/candid-types.html#type-func\n */\n\nconst Principal = z\n  .string({\n    description: DESCRIPTION.NOTIFY.PRINCIPAL_ID,\n    required_error: \"Config.notify.principalId is required\",\n  })\n  .uuid({ message: \"Invalid Principal ID\" })\n\nconst MethodName = z.string({\n  description: DESCRIPTION.NOTIFY.METHOD,\n  required_error: \"Config.notify.method is required\",\n})\nconst Notify = z\n  .object({\n    principalId: Principal,\n    methodName: MethodName,\n  })\n  .required()\n  .strict()\n\n/**\n * Config\n *\n * A config to initialize Quark on the integrator's website.\n */\nexport const Config = z\n  .object({\n    provider: Provider,\n    integrator: Integrator,\n    domain: Domain,\n    callback: Callback,\n    notify: Notify,\n  })\n  .required()\n  .strict()\n\nexport type Config = z.infer<typeof Config>\n\n/**\n * Tokens\n */\nconst TEST = z.literal(\"TEST\", {\n  description: \"Quark Test Token. Used for development on testnets\",\n})\nconst ICP = z.literal(\"ICP\", {\n  description: \"Internet Computer Token. Used for production on mainnet\",\n})\nconst TOKENS = [TEST, ICP]\n\n/**\n * BasketItem\n */\n\nconst Name = z\n  .string({\n    description: DESCRIPTION.BAKSET.NAME,\n    required_error: \"Basket.name is required\",\n  })\n  .min(1, { message: \"Basket.name must be at least 1 character long\" })\n  .max(100, { message: \"Basket.name must be at most 100 characters long\" })\nconst Description = z\n  .string({\n    description: DESCRIPTION.BAKSET.DESCRIPTION,\n  })\n  .min(1, { message: \"Basket.description must be at least 1 character long\" })\n  .max(100, {\n    message: \"Basket.description must be at most 100 characters long\",\n  })\nconst Value = z\n  .number({\n    description: \"Number of tokens to pay for this Basket item.\",\n    invalid_type_error: \"Invalid Basket.value Type. Expected Number\",\n    required_error: \"Basket.value is required\",\n  })\n  .min(1, { message: \"Basket.value must be at least 1\" })\n\nconst Token = z.union([TEST, ICP], {\n  description: \"Type of token used to pay for this Basket item.\",\n  invalid_type_error: \"Invalid Basket.token Type. Expected String\",\n  required_error: \"Basket.token is required\",\n})\n\nconst BasketItem = z\n  .object({\n    name: Name,\n    description: Description.optional(),\n    value: Value,\n    token: Token,\n  })\n  .required()\n\n/**\n * Basket\n *\n * The basket is an array of items that the end-user has selected to pay for.\n *\n *\n */\n\nexport const Basket = BasketItem.array()\n\nexport type Basket = z.infer<typeof Basket>\n\n/**\n * Checkout\n */\n\nconst Window = z.object({\n  open: z.function(),\n})\n\nconst Checkout = z.function().args(Basket).returns(z.boolean())\n\nconst Closure = z.object({\n  window: Window,\n  basket: Basket,\n})\n/**\n * CreateCheckout\n */\nconst CreateCheckoutArgs = z\n  .object({\n    provider: Provider,\n    domain: Domain,\n    closure: Closure,\n  })\n  .required()\n  .strict()\nconst CreateCheckout = z.function().args(CreateCheckoutArgs).returns(Checkout)\n\n// TODO: find out why this cannot be applied like: fn<CreateCheckout>(...)\nexport type CreateCheckout = z.infer<typeof CreateCheckout>\n\nexport type CreateCheckoutArgs = z.infer<typeof CreateCheckoutArgs>\nexport type Checkout = z.infer<typeof Checkout>\n","import { Config, Basket } from \"./schemas\"\n\nfunction config(c: Config) {\n  const r = Config.parse(c)\n  console.log(\"🚀 ~ file: validate.ts:5 ~ config ~ r\", r)\n  return r\n}\n\nfunction basket(b: Basket) {\n  const r = Basket.parse(b)\n  console.log(\"🚀 ~ file: validate.ts:5 ~ config ~ r\", r)\n  return r\n}\n\nconst validate = { config, basket }\nexport { validate }\n"],"names":["z"],"mappings":"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"}