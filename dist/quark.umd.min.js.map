{"version":3,"file":"quark.umd.min.js","sources":["../src/checkout.ts","../src/initialize.ts"],"sourcesContent":["/**\n * checkout - Open Quark website to confirm checkout\n *\n * After quark.js is properly configured, the integrator\n * can call the `checkout` Function returned by this\n * higher order Function to open a new browser window to\n * the Quark website to let the user confirm the transfer.\n */\n\nimport { type CreateCheckoutArgs, type Checkout, type Basket } from \"./schemas\"\n\nfunction createCheckout({\n  provider,\n  domain,\n  windowObject,\n}: CreateCheckoutArgs): Checkout {\n  return function checkout(basket: Basket): Basket {\n    // TODO: validate in outside module to separate validation from logic\n    // if (!validateBasket(data)) return\n    const queryString = JSON.stringify({\n      origin: window.origin,\n      provider: provider,\n    })\n    windowObject = window.open(\n      `${domain}/checkout?data=${btoa(queryString)}`,\n      \"_blank\",\n    )\n    return basket\n  }\n}\n\nexport { createCheckout }\n","import { createCheckout } from \"./checkout\"\nimport { type Config, type Checkout } from \"./schemas\"\n\nlet basket = []\n\nexport function initialize(config: Config): Checkout {\n  const windowObject = window\n  window.addEventListener(\n    \"message\",\n    function (event) {\n      if (event.origin !== config.domain) return // DANGER ZONE\n      if (![\"checkoutLoaded\", \"checkoutComplete\"].includes(event.data.type))\n        return\n      if (event.data.type === \"checkoutLoaded\") {\n        const message = JSON.parse(\n          JSON.stringify({\n            type: \"basketUpdate\",\n            basket,\n            origin,\n            notify: config.notify,\n            integrator: config.integrator,\n            provider: config.provider,\n          }),\n        )\n        windowObject.postMessage(message, config.domain)\n      } else if (event.data.type === \"checkoutComplete\") {\n        config.callback(event.data)\n      }\n    },\n    false,\n  )\n\n  const { provider, domain } = config\n  return createCheckout({ provider, domain, windowObject })\n}\n"],"names":[],"mappings":";;;;;;IAAA;;;;;;;IAOG;IAIH,SAAS,cAAc,CAAC,EACtB,QAAQ,EACR,MAAM,EACN,YAAY,GACO,EAAA;QACnB,OAAO,SAAS,QAAQ,CAAC,MAAc,EAAA;;;IAGrC,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC;gBACjC,MAAM,EAAE,MAAM,CAAC,MAAM;IACrB,YAAA,QAAQ,EAAE,QAAQ;IACnB,SAAA,CAAC,CAAA;IACF,QAAA,YAAY,GAAG,MAAM,CAAC,IAAI,CACxB,GAAG,MAAM,CAAA,eAAA,EAAkB,IAAI,CAAC,WAAW,CAAC,CAAA,CAAE,EAC9C,QAAQ,CACT,CAAA;IACD,QAAA,OAAO,MAAM,CAAA;IACf,KAAC,CAAA;IACH;;IC1BA,IAAI,MAAM,GAAG,EAAE,CAAA;IAET,SAAU,UAAU,CAAC,MAAc,EAAA;QACvC,MAAM,YAAY,GAAG,MAAM,CAAA;IAC3B,IAAA,MAAM,CAAC,gBAAgB,CACrB,SAAS,EACT,UAAU,KAAK,EAAA;IACb,QAAA,IAAI,KAAK,CAAC,MAAM,KAAK,MAAM,CAAC,MAAM;IAAE,YAAA,OAAM;IAC1C,QAAA,IAAI,CAAC,CAAC,gBAAgB,EAAE,kBAAkB,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;gBACnE,OAAM;IACR,QAAA,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,gBAAgB,EAAE;gBACxC,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CACxB,IAAI,CAAC,SAAS,CAAC;IACb,gBAAA,IAAI,EAAE,cAAc;oBACpB,MAAM;oBACN,MAAM;oBACN,MAAM,EAAE,MAAM,CAAC,MAAM;oBACrB,UAAU,EAAE,MAAM,CAAC,UAAU;oBAC7B,QAAQ,EAAE,MAAM,CAAC,QAAQ;IAC1B,aAAA,CAAC,CACH,CAAA;gBACD,YAAY,CAAC,WAAW,CAAC,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,CAAA;IACjD,SAAA;IAAM,aAAA,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,kBAAkB,EAAE;IACjD,YAAA,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;IAC5B,SAAA;SACF,EACD,KAAK,CACN,CAAA;IAED,IAAA,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,MAAM,CAAA;QACnC,OAAO,cAAc,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,YAAY,EAAE,CAAC,CAAA;IAC3D;;;;;;;;;;"}